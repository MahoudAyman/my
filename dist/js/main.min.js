// استخدام ResizeObserver لمراقبة تغيير حجم الحاوية بدقة
const rotator = document.getElementById('techRotator');
if (rotator) {
    const resizeObserver = new ResizeObserver(positionCards);
    resizeObserver.observe(rotator);
}

function positionCards() {
    const radius = window.innerWidth < 768 ? 150 : 200;
    const itemAngle = 360 / techSkills.length;
    
    const techCards = document.querySelectorAll('.tech-card');
    techCards.forEach((item, index) => {
        const angle = (index * itemAngle) * Math.PI / 180;
        const x = radius * Math.cos(angle);
        const z = radius * Math.sin(angle);
        item.style.transform = `translate(-50%, -50%) translate3d(${x}px, 0, ${z}px) rotateY(${-angle}rad)`;
    });
    
    rotator.style.transform = `translateZ(-${radius}px) rotateY(${currentAngle}deg)`;
}

// إعادة تشغيل تأثير الكتابة الآلي عند ظهور القسم
document.addEventListener('DOMContentLoaded', function() {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('typewriter');
            }
        });
    }, {threshold: 0.1});
    
    const heading = document.querySelector('.typewriter');
    if (heading) observer.observe(heading);
    
    // تأثيرات إضافية عند التمرير
    const serviceCards = document.querySelectorAll('.service-card');
    serviceCards.forEach((card, index) => {
        card.style.setProperty('--delay', `${index * 0.1}s`);
    });
});

document.addEventListener('DOMContentLoaded', function () {
    const testimonialSliderElement = document.querySelector('.testimonial-slider-6');
    if (!testimonialSliderElement) {
        return; 
    }
    if (testimonialSliderElement.dataset.swiperInitialized === 'true') {
        return;
    }

    const testimonialSlider = new Swiper(testimonialSliderElement, {
        loop: true,
        grabCursor: true,
        autoHeight: true,
        observer: true,
        observeParents: true,
        centeredSlides: true,
        spaceBetween: 30,
        speed: 800,
        
        autoplay: {
            delay: 2500,
            disableOnInteraction: false,
            pauseOnMouseEnter: true,
        },

        navigation: {
            prevEl: ".testimonial-prev",
            nextEl: ".testimonial-next",
        },

        pagination: {
            el: ".testimonial-pagination",
            clickable: true,
            renderBullet: function (index, className) {
                return '<span class="' + className + ' w-3 h-3 bg-gray-300 rounded-full cursor-pointer transition-colors duration-300 mx-1"></span>';
            }
        },

        breakpoints: {
            320: { slidesPerView: 1, spaceBetween: 20, },
            768: { slidesPerView: 1.5, },
            992: { slidesPerView: 2, },
            1200: { slidesPerView: 2.5, },
            1440: { slidesPerView: 3.5, }
        },
        
        lazy: {
            loadPrevNext: true,
        },
        preloadImages: false,
    });

    testimonialSliderElement.dataset.swiperInitialized = 'true';
});

(function() {
    'use strict';
    
    const cards = document.querySelectorAll('.skills-card');
    
    cards.forEach(card => {
        card.addEventListener('mousemove', (e) => {
            const rect = card.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            
            card.style.setProperty('--mouse-x', `${x}px`);
            card.style.setProperty('--mouse-y', `${y}px`);
            
            const centerX = rect.width / 2;
            const centerY = rect.height / 2;
            const tiltX = (x - centerX) / centerX * 10;
            const tiltY = (centerY - y) / centerY * 10;
            card.style.setProperty('--tilt-x', `${tiltX}deg`);
            card.style.setProperty('--tilt-y', `${tiltY}deg`);

            const glow = card.querySelector('.card-border-effect');
            if (glow) {
                glow.style.background = `radial-gradient(circle at ${x}px ${y}px, rgba(59, 130, 246, 0.6), rgba(16, 185, 129, 0.4), rgba(59, 130, 246, 0.6))`;
            }
        });

        card.addEventListener('mouseleave', () => {
            card.style.setProperty('--tilt-x', '0deg');
            card.style.setProperty('--tilt-y', '0deg');
        });
        
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        
        setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, 100);
    });
    
    document.querySelectorAll('.skills-section a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
})();

document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('particles-js')) {
        particlesJS('particles-js', {
            "particles": {
                "number": {
                    "value": 140,
                    "density": {
                        "enable": true,
                        "value_area": 800
                    }
                },
                "color": {
                    "value": "#3a7bd5"
                },
                "shape": {
                    "type": "circle",
                    "stroke": {
                        "width": 0,
                        "color": "#000000"
                    },
                    "polygon": {
                        "nb_sides": 5
                    }
                },
                "opacity": {
                    "value": 0.8,
                    "random": true,
                    "anim": {
                        "enable": false,
                        "speed": 1,
                        "opacity_min": 0.1,
                        "sync": false
                    }
                },
                "size": {
                    "value": 3,
                    "random": true,
                    "anim": {
                        "enable": false,
                        "speed": 40,
                        "size_min": 0.1,
                        "sync": false
                    }
                },
                "line_linked": {
                    "enable": true,
                    "distance": 150,
                    "color": "#3a7bd5",
                    "opacity": 1.0,
                    "width": 1
                },
                "move": {
                    "enable": true,
                    "speed": 2,
                    "direction": "none",
                    "random": false,
                    "straight": false,
                    "out_mode": "out",
                    "bounce": false,
                    "attract": {
                        "enable": false,
                        "rotateX": 600,
                        "rotateY": 1200
                    }
                }
            },
            "interactivity": {
                "detect_on": "canvas",
                "events": {
                    "onhover": {
                        "enable": true,
                        "mode": "grab"
                    },
                    "onclick": {
                        "enable": true,
                        "mode": "push"
                    },
                    "resize": true
                },
                "modes": {
                    "grab": {
                        "distance": 140,
                        "line_linked": {
                            "opacity": 1
                        }
                    },
                    "bubble": {
                        "distance": 400,
                        "size": 40,
                        "duration": 2,
                        "opacity": 8,
                        "speed": 3
                    },
                    "repulse": {
                        "distance": 200,
                        "duration": 0.4
                    },
                    "push": {
                        "particles_nb": 4
                    },
                    "remove": {
                        "particles_nb": 2
                    }
                }
            },
            "retina_detect": true
        });
    }
});

document.addEventListener('DOMContentLoaded', function() {
    // Enhanced Theme Manager
    class ThemeManager {
        constructor() {
            this.themeToggle = document.getElementById('themeToggle');
            this.init();
        }
        
        init() {
            this.loadTheme();
            this.setupEventListeners();
        }
        
        loadTheme() {
            const isDarkMode = localStorage.getItem('darkMode') === 'true';
            document.body.classList.toggle('dark', isDarkMode);
            this.updateThemeIcon(isDarkMode);
        }
        
        setupEventListeners() {
            this.themeToggle.addEventListener('click', () => this.toggleTheme());
            
            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
                if (!('darkMode' in localStorage)) {
                    this.setTheme(e.matches);
                }
            });
        }
        
        toggleTheme() {
            const isDarkMode = !document.body.classList.contains('dark');
            this.setTheme(isDarkMode);
        }
        
        setTheme(isDarkMode) {
            document.body.classList.toggle('dark', isDarkMode);
            localStorage.setItem('darkMode', isDarkMode);
            this.updateThemeIcon(isDarkMode);
        }
        
        updateThemeIcon(isDarkMode) {
            console.log(`Theme changed to ${isDarkMode ? 'dark' : 'light'} mode`);
        }
    }

    new ThemeManager();

    const techSkills = [
        { name: 'HTML5', icon: 'fab fa-html5', level: 95 },
        { name: 'CSS3', icon: 'fab fa-css3-alt', level: 90 },
        { name: 'JavaScript', icon: 'fab fa-js', level: 85 },
        { name: 'React', icon: 'fab fa-react', level: 80 },
        { name: 'Node.js', icon: 'fab fa-node-js', level: 75 },
        { name: 'Python', icon: 'fab fa-python', level: 70 },
        { name: 'PHP', icon: 'fab fa-php', level: 65 },
        { name: 'Database', icon: 'fas fa-database', level: 85 },
        { name: 'Git', icon: 'fab fa-git-alt', level: 80 },
        { name: 'UI/UX', icon: 'fas fa-paint-brush', level: 75 }
    ];
    
    const rotator = document.getElementById('techRotator');
    const prevBtn = document.getElementById('prevTech');
    const nextBtn = document.getElementById('nextTech');
    
    let currentAngle = 0;
    const radius = window.innerWidth < 768 ? 150 : 200;
    const itemAngle = 360 / techSkills.length;
    
    techSkills.forEach((skill, index) => {
        const angle = (index * itemAngle) * Math.PI / 180;
        const x = radius * Math.cos(angle);
        const z = radius * Math.sin(angle);
        
        const techCard = document.createElement('div');
        techCard.className = 'tech-card';
        techCard.style.transform = `translate(-50%, -50%) translate3d(${x}px, 0, ${z}px) rotateY(${-angle}rad)`;
        techCard.innerHTML = `
            <i class="${skill.icon} tech-icon"></i>
            <div class="tech-title">${skill.name}</div>
            <div class="progress-track">
                <div class="progress-bar" style="width: ${skill.level}%"></div>
            </div>
        `;
        
        rotator.appendChild(techCard);
    });
    
    function rotateCarousel(direction = 'next') {
        clearInterval(autoRotate);
        if (direction === 'next') {
            currentAngle += itemAngle;
        } else {
            currentAngle -= itemAngle;
        }
        rotator.style.transform = `translateZ(-${radius}px) rotateY(${currentAngle}deg)`;
        autoRotate = setInterval(() => rotateCarousel('next'), 2000);
    }
    
    let autoRotate = setInterval(() => rotateCarousel('next'), 2000);
    
    prevBtn.addEventListener('click', function() {
        rotateCarousel('prev');
    });
    
    nextBtn.addEventListener('click', function() {
        rotateCarousel('next');
    });
    
    rotator.addEventListener('mouseenter', function() {
        clearInterval(autoRotate);
    });
    
    rotator.addEventListener('mouseleave', function() {
        autoRotate = setInterval(() => rotateCarousel('next'), 2000);
    });
    
    window.addEventListener('resize', function() {
        positionCards();
    });
    
    let touchStartX = 0;
    let touchEndX = 0;
    
    rotator.addEventListener('touchstart', function(e) {
        touchStartX = e.changedTouches[0].screenX;
        clearInterval(autoRotate);
    }, {passive: true});
    
    rotator.addEventListener('touchend', function(e) {
        touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
        autoRotate = setInterval(() => rotateCarousel('next'), 2000);
    }, {passive: true});
    
    function handleSwipe() {
        const swipeThreshold = 50;
        
        if (touchEndX < touchStartX - swipeThreshold) {
            rotateCarousel('next');
        } else if (touchEndX > touchStartX + swipeThreshold) {
            rotateCarousel('prev');
        }
    }
    
    document.addEventListener('keydown', function(e) {
        if (e.key === 'ArrowLeft') {
            rotateCarousel('prev');
        } else if (e.key === 'ArrowRight') {
            rotateCarousel('next');
        }
    });
});

document.addEventListener('DOMContentLoaded', function () {
    const tabs = document.querySelectorAll('#tabs li a');
    const tabContents = document.querySelectorAll('#tab-contents .tab-contents');

    tabs.forEach(tab => {
        tab.addEventListener('click', function (event) {
            event.preventDefault();

            tabs.forEach(t => t.parentElement.classList.remove('active'));
            this.parentElement.classList.add('active');

            tabContents.forEach(content => {
                content.classList.remove('show');
                content.classList.remove('active');
            });

            const targetContentId = this.getAttribute('href');
            const targetContent = document.querySelector(targetContentId);
            
            if (targetContent) {
                targetContent.classList.add('show');
                targetContent.classList.add('active');
            }
        });
    });
});
